class Solution:
    def intervalIntersection(self, f: List[List[int]], s: List[List[int]]) -> List[List[int]]:
        first=0
        end=1
        res=[]
        i=0
        j=0
        while i<len(f) and j<len(s):
            fi=f[i]
            si=s[j]
            fo=fi[0]>=si[0] and fi[0]<=si[1]
            so=si[0]>=fi[0] and si[0]<=fi[1]
            if fo or so:
                sti=max(fi[0],si[0])
                endi=min(si[1],fi[1])
                res.append([sti,endi])
            if fi[1]<si[1]:
                i=i+1
            else:
                j=j+1
        return res
